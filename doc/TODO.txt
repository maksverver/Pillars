- Update heuristic: favour creation of many 1/2/3 groups?
  (This doesn't really seem to help)

Maybe:
  - In value_moves_misere, skip null moves automatically
    (slight performance improvement; but we still need to
     value these moves)

  - Cache analysed misere boards to avoid timeouts
    (see timeout games for examples where this helps)
  .. also use this to implement 1-move lookahead.
  This helps when the field is too complex to analyze in detail,
  but there is a (large) winning move into a simpler field.

LONG TERM:
- Make more efficient use of time
  (and prevent timeouts by reducing search time when time is short?)

- Benchmark performance to find hot-spots to optimize

REFACTOR:
- Allow joker moves to be included in board description,
  and adjust *all* code that handles long board descriptions accordingly.

Analysis:
- Instead of always flood filling, detect need by scanning around removed
  rectangle?
- Abort move valuation after first winning move (+2) is found?
